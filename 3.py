# 3. Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
# Проверить работу исключения на реальном примере. Запрашивать у пользователя данные и заполнять список необходимо только числами.
# Класс-исключение должен контролировать типы данных элементов списка.
#
# Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, пока пользователь сам не остановит работу скрипта,
# введя, например, команду «stop». При этом скрипт завершается, сформированный список с числами выводится на экран.
#
# Подсказка: для этого задания примем, что пользователь может вводить только числа и строки.
# Во время ввода пользователем очередного элемента необходимо реализовать проверку типа элемента.
# Вносить его в список, только если введено число. Класс-исключение должен не позволить пользователю ввести текст (не число)
# и отобразить соответствующее сообщение. При этом работа скрипта не должна завершаться.

class NumLenExc(Exception):

    def __init__(self):
        self.my_list = []


    def get (self):
        return self.my_list

    def num(self, arg):
        try:
            if arg.find('.')>0:
                self.my_list.append(float(arg))
            else:
                self.my_list.append(int(arg))
        except ValueError:
            print("you write not number")



i = input("input data, for exit write 'q': ")
a = NumLenExc()

while (i != "q"):
    a.num(i)
    i = input("input data, for exit write 'q': ")
else:
    print(a.get())
